@model ShoppingCartVM
@using Microsoft.Extensions.Options
@inject IOptions<Utilities.Stripedata> Stripe

<!DOCTYPE html>
<html lang="en">
<head>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css">
	<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat&display=swap">
	<link href="~/summary/style.css" rel="stylesheet" />
</head>
<body className='snippet-body'>
	<div class="wrapper">
		<div class="h5 large">Billing Address</div>
		<form method="post">
			<div class="row">
				<div class="col-lg-6 col-md-8 col-sm-10 offset-lg-0 offset-md-2 offset-sm-1">
					<div class="mobile h5">Billing Address</div>
					<div id="details" class="bg-white rounded pb-5">
						
						<div class="form-group">
							<label class="text-muted">Name</label>
							<input asp-for="OrderHeader.Name" type="text" class="form-control" data-field="OrderHeader.Name">
							<span asp-validation-for="OrderHeader.Name"></span>
						</div>

						<div class="row">
							<div class="col-lg-6">
								<div class="form-group">
									<label class="text-muted">City</label>
									<input asp-for="OrderHeader.City" type="text" class="form-control" data-field="OrderHeader.City">
									<span asp-validation-for="OrderHeader.City"></span>
								</div>
							</div>
							<div class="col-lg-6">
								<div class="form-group">
									<label class="text-muted">Phone Number</label>
									<input asp-for="OrderHeader.PhoneNumber" type="text" class="form-control" data-field="OrderHeader.PhoneNumber">
									<span asp-validation-for="OrderHeader.PhoneNumber"></span>
								</div>
							</div>
						</div>

						<div class="row">
							<div class="col-lg-12">
								<div class="form-group">
									<label class="text-muted">Address</label>
									<input asp-for="OrderHeader.Address" type="text" class="form-control" data-field="OrderHeader.Address">
									<span asp-validation-for="OrderHeader.Address"></span>
								</div>
							</div>
						</div>
					</div>
				</div>

				<div class="col-lg-6 col-md-8 col-sm-10 offset-lg-0 offset-md-2 offset-sm-1 pt-lg-0 pt-3">
					<div id="cart" class="bg-white rounded">
						<div class="d-flex justify-content-between align-items-center">
							<div class="h6">Cart Summary</div>
							<div class="h6"> <a href="#">Edit</a> </div>
						</div>

						@foreach (var item in Model.CartsList)
						{
							<div class="d-flex jusitfy-content-between align-items-center pt-3 pb-2 border-bottom">
							<div class="item pr-2">
									<img src="~/@item.Product.Img" alt="" width="80" height="80">
									<div class="number">@item.Count</div>
							</div>
								<div class="d-flex flex-column px-3"> <b class="h5">@item.Product.Name</b></div>
							<div class="ml-auto"> <b class="h5">$@item.Product.Price</b></div>
						</div>
						}

						<div class="d-flex align-items-center py-2">
							<div class="display-5">Total</div>
							<div class="ml-auto d-flex">
								<div class="text-primary text-uppercase px-3">USD</div>
								<div class="font-weight-bold">$@Model.OrderHeader.TotalPrice.ToString()</div>
							</div>
						</div>

					</div>
					<div class="row pt-lg-3 pt-2 buttons mb-sm-0 mb-2" style="width:500px">
						<div class="col-md-6">
							<a href="\Customer\Cart\Index" class="btn btn-secondary text-uppercase">BACK TO SHOPPING</a>
						</div>
						<div class="col-md-6 pt-md-0 pt-3 ">
							<button style="color:white" type="submit" id="placeOrderBtn" class="btn btn-primary btn-lg btn-block">Place Order</button>
						</div>
					</div>
					<div class="text-muted pt-3" id="mobile"> <span class="fas fa-lock"></span> Your information is save </div>
				</div>
			</div>
			<div class="text-muted"> <span class="fas fa-lock"></span> Your information is save </div>
		</form>
	</div>

	<script>
		// document.getElementById("placeOrderBtn").addEventListener("click", function () {
		// 	fetch('Url.Action("POSTSummary", "Cart", new { area = "Customer" })', {
		// 		method: "POST",
		// 		headers: {
		// 			"Content-Type": "application/json",
		// 			"RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
		// 		},
		// 		body: JSON.stringify(Html.Raw(Json.Serialize(Model)))
		// 	})
		// 		.then(response => {
		// 			if (response.ok) {
		// 				return response.text();
		// 			}
		// 			throw new Error('Failed to create Stripe session.');
		// 		})
		// 		.then(sessionUrl => {
		// 			window.location.href = sessionUrl;
		// 		})
		// 		.catch(error => console.error(error));
		// });

		document.getElementById("placeOrderBtn").addEventListener("click", function (event) {
			event.preventDefault();

			fetch('@Url.Action("POSTSummary", "Cart", new { area = "Customer" })', {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
					"RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
				},
				body: JSON.stringify(@Html.Raw(Json.Serialize(Model)))
			})
				.then(response => {
					if (response.ok) {
						return response.json();
					}
					throw new Error('Failed to create Stripe session.');
				})
				.then(data => {
					window.location.href = data.sessionUrl;
				})
				.catch(error => console.error(error));
		});


		// to update Filds from form
		const updates = [];

		document.querySelectorAll("[asp-for]").forEach(function (input) {
			input.addEventListener("change", function () {
				// إضافة الحقل والقيمة إلى قائمة التحديثات
				updates.push({
					field: input.getAttribute("asp-for"),
					value: input.value
				});
			});
		});

		
		document.querySelectorAll("[data-field]").forEach(function (input) {
			input.addEventListener("change", function () {
				const field = input.getAttribute("data-field");
				const value = input.value;

				fetch('@Url.Action("UpdateFields", "Cart", new { area = "Customer" })', {
					method: "POST",
					headers: {
						"Content-Type": "application/json",
						"RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
					},
					body: JSON.stringify({ updates: [{ field: field, value: value }] })
				})
					.then(response => {
						if (response.ok) {
							console.log("Field updated successfully:", field);
						} else {
							console.error("Failed to update field:", field);
						}
					})
					.catch(error => console.error("Error updating field:", field, error));
			});
		});

	</script>

</body>
</html>
